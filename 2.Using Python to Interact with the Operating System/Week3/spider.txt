Reliable entry-level 14 laptop
Cutting-edge Intel Core processors
Great for everyday use
In our last example, we used a pretty complex regular expression from a Python program to look for a process ID. This is just one example of something we might want to do when processing texts from our Python scripts. We can also use regular expressions with a bunch of command line tools. Grep is an especially easy to use yet extremely powerful tool for applying regexes. It's a great way to easily try out some expressions and get familiar with them. So let's look at some basic matching we can do with grep. The simplest of all matchings is just to search to see if the string is present. Remember, that grep works by printing out any line that matches the query that we pass it. So for a simplest query of passing a plain old string, grep will print any lines containing that string in the file that we give it. Let's try this out using grep to find words inside the /usr/share/dict/words file, which is a file that some spell-checking programs use to verify if the word exists or not. This file contains one word per line. We'll start by looking at words that contain the particle thon. Let's see what happens.
Play video starting at :1:19 and follow transcript1:19
So when we call grep with thon as a pattern to match on and we pass our list of words as a file, we see that it matches with a bunch of different words. These words, all contain the string thon somewhere inside of them, which is why they appear in our results. We also see that the output is highlighted for us, showing us the matching part of the line in a different color. This added visual indicator is something that grep does for us so that we can easily see where the match occurred. It's worth calling out that the string we're passing in grep is case sensitive. So it needs to be matched exactly. If we use uppercase letters, they'll only be matched by uppercase letters. If we wanted to match a string regardless of case, we will have to pass the -i parameter to the grep command, like this.